{"version":3,"file":"static/js/779.5ca5c67f.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","webpack://react-homework-template/./src/components/MoviesPost/moviespost.module.css?41ac","components/MoviesPost/MoviesPost.jsx","webpack://react-homework-template/./src/pages/Movies/moviespage.module.css?f407","pages/Movies/Moviespage.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'f632edb05cc91b97d9ccb27096819906';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrendingMovies = async () => {\n    const responce = await axios.get(`${BASE_URL}trending/movie/week`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n    const movies = await responce.data.results;\n    return movies;\n};\n\n\n\n\n\nexport const getSearchResults = async(searchFilms, page = 1) => {\n  const responce = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchFilms}&page=${page}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: searchFilms,\n      page: 1,\n    },\n  });\n  const movies = await responce.data.results;\n  return movies;\n}\n\n\n\n\nexport const fetchFilmToId = async id => {\n  return await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getCastToId = async id => {\n  return await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const getReviews = async id => {\n  return await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n\n\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"moviespost_text__CplLP\"};","import styles from \"./moviespost.module.css\";\nexport const MoviePost = ({ poster_path, title, id}) => {\n  return (\n\n    <div>\n      <img\n        src={\n              poster_path === null\n                ? 'https://klike.net/uploads/posts/2022-09/1662373395_b-1.jpg'\n                : `https://image.tmdb.org/t/p/w500${poster_path}`\n            }\n        alt={title}\n        width=\"320\"\n        key={id}\n      />\n      <p className={styles.text}>{title}</p>\n      </div>\n\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"btnSearch\":\"moviespage_btnSearch__FvTkz\",\"inputSearch\":\"moviespage_inputSearch__MNpGo\",\"linkSearch\":\"moviespage_linkSearch__fw9L2\",\"itemSearch\":\"moviespage_itemSearch__OT8O5\",\"gallerySearch\":\"moviespage_gallerySearch__1zsrq\"};","\nimport { useState, useEffect } from 'react';\nimport { Outlet, useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { getSearchResults } from 'components/Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport styles from \"./moviespage.module.css\"\nimport { MoviePost } from 'components/MoviesPost/MoviesPost';\nconst MoviesPage = () => {\n  const [movesState, setMovesState] = useState([]);\n  const [searchMovieQwerry, setSearchMovieQwerry] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoader] = useState(false);\n  const moveName = searchParams.get('name') ?? '';\n  const location = useLocation();\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (searchMovieQwerry === '') {\n      return;\n    } else {\n      setLoader(true);\n      getSearchResults(searchMovieQwerry)\n        .then(movies => setMovesState(movies))\n        .finally(setLoader(false));\n    }\n  }, [searchMovieQwerry]);\n\n  useEffect(() => {\n    if (moveName !== '') {\n      setSearchMovieQwerry(moveName);\n    }\n  }, [moveName]);\n\n  const onSummit = event => {\n    event.preventDefault();\n    const value = event.target.name.value;\n    setSearchMovieQwerry(value);\n    updateQueryString(value);\n    event.target.reset();\n  };\n\n  return (\n      <div>\n      <h1>Search Movies</h1>\n          <form onSubmit={onSummit}>\n        <input className={styles.inputSearch} type=\"text\" name=\"name\" placeholder=\"Search movies...\" />\n        <button type={'submit'} className={styles.btnSearch}>Search</button>\n      </form>\n      {loading && <Loader />}\n      <Outlet />\n      <ul className={styles.gallerySearch}>\n        {movesState?.map(movie => (\n            <li key={movie.id} className={styles.itemSearch}>\n                <Link className={styles.linkSearch} to={`${movie.id}`} key={movie.id} state={{ from: location }}>\n            {MoviePost(movie)}\n          </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","responce","data","results","movies","getSearchResults","searchFilms","page","language","query","fetchFilmToId","id","getCastToId","getReviews","MoviePost","poster_path","title","src","alt","width","className","styles","useState","movesState","setMovesState","searchMovieQwerry","setSearchMovieQwerry","useSearchParams","searchParams","setSearchParams","loading","setLoader","moveName","get","location","useLocation","useEffect","then","finally","onSubmit","event","preventDefault","name","value","target","reset","type","placeholder","Loader","map","movie","to","state","from"],"sourceRoot":""}