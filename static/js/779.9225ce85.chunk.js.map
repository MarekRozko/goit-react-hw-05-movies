{"version":3,"file":"static/js/779.9225ce85.chunk.js","mappings":"+SACMA,EAAU,mCACVC,EAAU,gCAGHC,EAAiB,mCAAG,sGACNC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA0C,CAC7DG,OAAQ,CACJC,QAASL,KAHY,cACvBM,EADuB,gBAMRA,EAASC,KAAKC,QANN,cAMvBC,EANuB,yBAOtBA,GAPsB,2CAAH,qDAYjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPR,EAAAA,EAAAA,IAAA,UAAaF,EAAb,+BAA2CU,GAAe,CAC/EP,OAAQ,CACNC,QAASL,EACTY,SAAU,QACVC,MAAOF,EACPG,KAAM,KANoB,cACxBR,EADwB,gBASTA,EAASC,KAAKC,QATL,cASxBC,EATwB,yBAUvBA,GAVuB,2CAAH,sDAyBhBM,EAAa,mCAAG,WAAMC,GAAN,iFACdb,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8Be,EAA9B,oBAA4ChB,IAD9B,mFAAH,sDAIbiB,EAAW,mCAAG,WAAMD,GAAN,iFACZb,EAAAA,EAAAA,IAAA,UACRF,EADQ,kBACSe,EADT,4BAC+BhB,IAFnB,mFAAH,sDAMXkB,EAAU,mCAAG,WAAMF,GAAN,iFACXb,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8Be,EAA9B,4BAAoDhB,IADzC,mFAAH,qD,8ICnDvB,EAA8B,gCAA9B,EAA2E,+B,SCgD3E,EA3CmB,WACjB,OAAsCmB,EAAAA,EAAAA,UAAS,IAA/C,eAAOR,EAAP,KAAoBS,EAApB,KACE,GAA0CD,EAAAA,EAAAA,UAAS,IAAnD,eAAOE,EAAP,KAAsBC,EAAtB,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KAuBF,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBjB,EAAAA,EAAAA,IAAiBC,GAFxC,OAEUJ,EAFV,OAGIe,EAAiBf,GAHrB,gDAKImB,EAAS,KAAME,SALnB,yBAOIJ,GAAW,GAPf,6EADc,sBAYVb,GAZW,WAAD,wBAaZkB,EAEH,GAAE,CAAClB,KAGA,4BACA,2CACI,kBAAOmB,UAAWC,EAAoBC,KAAK,OAAOC,SAxBrC,SAACC,GACpBd,EAAec,EAAMC,OAAOC,MAC7B,IAuBMX,IAAS,uBAAIA,EAAMG,UACnBL,IAAW,SAACc,EAAA,EAAD,KACd,wBACGhB,EAAciB,KAAI,SAACC,GAAD,OACjB,SAAC,KAAD,CAAMT,UAAWC,EAAmBS,GAAE,UAAKD,EAAMvB,IAAjD,SAAuEuB,EAAME,OAAjBF,EAAMvB,GADjD,QAO1B,C","sources":["components/Api/Api.jsx","webpack://react-homework-template/./src/pages/Movies/moviespage.module.css?f407","pages/Movies/Moviespage.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'f632edb05cc91b97d9ccb27096819906';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrendingMovies = async () => {\n    const responce = await axios.get(`${baseURL}trending/movie/day`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n    const movies = await responce.data.results;\n    return movies;\n};\n\n\n\nexport const getSearchResults = async(searchFilms) => {\n  const responce = await axios.get(`${baseURL}search/movie?&query=${searchFilms}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: searchFilms,\n      page: 1,\n    },\n  });\n  const movies = await responce.data.results;\n  return movies;\n}\n\n// export const getReviews = async(movieId) => {\n//   const responce = await axios.get(`${baseURL}/movie/${id}/reviews?api_key=${API_KEY}`, {\n//     params: {\n//       api_key: API_KEY,\n//     },\n//   });\n//   const movies = await responce.data.results;\n//   return movies;\n// }\n\n\n\nexport const fetchFilmToId = async id => {\n  return await axios.get(`${baseURL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getCastToId = async id => {\n  return await axios.get(\n    `${baseURL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const getReviews = async id => {\n  return await axios.get(`${baseURL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchInput\":\"moviespage_SearchInput__v3pLc\",\"searchLink\":\"moviespage_searchLink__oyQFi\"};","\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getSearchResults } from 'components/Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport styles from \"./moviespage.module.css\"\nconst MoviesPage = () => {\n  const [searchFilms, setSearchFilms] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n  const handleSearch = (event) => {\n    setSearchFilms(event.target.value);\n  };\n\n  useEffect(() => {\n    async function fetchSearchResults() {\n      try {\n        const data = await getSearchResults(searchFilms);\n        setSearchResults(data);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    if (searchFilms) {\n      fetchSearchResults();\n    }\n  }, [searchFilms]);\n\n  return (\n      <div>\n      <h1>Search Movies</h1>\n          <input className={styles.SearchInput} type=\"text\" onChange={handleSearch} />\n        {error && <p>{error.massage}</p>}\n        {loading && <Loader />}\n      <ul>\n        {searchResults.map((movie) => (\n          <Link className={styles.searchLink} to={`${movie.id}`} key={movie.id}>{movie.title}</Link>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","baseURL","getTrendingMovies","axios","params","api_key","responce","data","results","movies","getSearchResults","searchFilms","language","query","page","fetchFilmToId","id","getCastToId","getReviews","useState","setSearchFilms","searchResults","setSearchResults","loading","setLoading","error","setError","useEffect","massage","fetchSearchResults","className","styles","type","onChange","event","target","value","Loader","map","movie","to","title"],"sourceRoot":""}