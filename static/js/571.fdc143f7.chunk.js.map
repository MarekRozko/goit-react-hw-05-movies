{"version":3,"file":"static/js/571.fdc143f7.chunk.js","mappings":"+SACMA,EAAU,mCACVC,EAAU,gCAGHC,EAAiB,mCAAG,sGACNC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA0C,CAC7DG,OAAQ,CACJC,QAASL,KAHY,cACvBM,EADuB,gBAMRA,EAASC,KAAKC,QANN,cAMvBC,EANuB,yBAOtBA,GAPsB,2CAAH,qDAYjBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPR,EAAAA,EAAAA,IAAA,UAAaF,EAAb,+BAA2CU,GAAe,CAC/EP,OAAQ,CACNC,QAASL,EACTY,SAAU,QACVC,MAAOF,EACPG,KAAM,KANoB,cACxBR,EADwB,gBASTA,EAASC,KAAKC,QATL,cASxBC,EATwB,yBAUvBA,GAVuB,2CAAH,sDAyBhBM,EAAa,mCAAG,WAAMC,GAAN,iFACdb,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8Be,EAA9B,oBAA4ChB,IAD9B,mFAAH,sDAIbiB,EAAW,mCAAG,WAAMD,GAAN,iFACZb,EAAAA,EAAAA,IAAA,UACRF,EADQ,kBACSe,EADT,4BAC+BhB,IAFnB,mFAAH,sDAMXkB,EAAU,mCAAG,WAAMF,GAAN,iFACXb,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8Be,EAA9B,4BAAoDhB,IADzC,mFAAH,qD,+ICnDvB,GAAgB,YAAc,6BAA6B,eAAiB,iC,SCgD5E,EA3CgB,WACd,OAA8BmB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6FACtBN,GAAa,GADS,mBAGGL,EAAAA,EAAAA,IAAWQ,GAHd,gBAGZnB,EAHY,EAGZA,KACRc,EAAWd,EAAKC,SAJI,gDAMpBiB,EAAS,KAAMK,SANK,yBAQpBP,GAAa,GARO,4EAAH,qDAWrBM,EAAgBH,EACjB,GAAE,CAACA,KAGA,0BACGJ,IAAW,SAACS,EAAA,EAAD,IACTP,IAAS,uBAAIA,EAAMM,WACtB,oCACDV,EAAQY,OAAS,EAChBZ,EAAQa,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACR,gBAAaC,UAAWC,EAAAA,YAAxB,WAEA,eAAID,UAAWC,EAAAA,cAAf,SAAsCJ,KACtC,cAAGG,UAAWC,EAAAA,eAAd,SAAsCH,KACtC,8CAAsBC,OAJbpB,EADD,KASZ,wCAIP,C","sources":["components/Api/Api.jsx","webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'f632edb05cc91b97d9ccb27096819906';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrendingMovies = async () => {\n    const responce = await axios.get(`${baseURL}trending/movie/day`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n    const movies = await responce.data.results;\n    return movies;\n};\n\n\n\nexport const getSearchResults = async(searchFilms) => {\n  const responce = await axios.get(`${baseURL}search/movie?&query=${searchFilms}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: searchFilms,\n      page: 1,\n    },\n  });\n  const movies = await responce.data.results;\n  return movies;\n}\n\n// export const getReviews = async(movieId) => {\n//   const responce = await axios.get(`${baseURL}/movie/${id}/reviews?api_key=${API_KEY}`, {\n//     params: {\n//       api_key: API_KEY,\n//     },\n//   });\n//   const movies = await responce.data.results;\n//   return movies;\n// }\n\n\n\nexport const fetchFilmToId = async id => {\n  return await axios.get(`${baseURL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getCastToId = async id => {\n  return await axios.get(\n    `${baseURL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const getReviews = async id => {\n  return await axios.get(`${baseURL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"itemReviews\":\"reviews_itemReviews__ZuVzh\",\"contentReviews\":\"reviews_contentReviews__cVn57\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'components/Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport styles from \"./reviews.module.css\";\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviewsMovie = async () => {\n      setIsLoading(true);\n      try {\n        const { data } = await getReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviewsMovie(movieId);\n  }, [movieId]);\n\n  return (\n      <ul>\n        {loading && <Loader />} \n          {error && <p>{error.massage}</p>}\n        <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        reviews.map(({ id, author, content, created_at }) => (\n            <li key={id} className={styles.itemReviews}>\n            \n            <h3 className={styles.authorReviews}>{author}</h3>\n            <p className={styles.contentReviews}>{content}</p>\n            <p>Publication date: {created_at}</p>\n          </li>\n        ))\n      ) : (\n        <p>No reviews</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;"],"names":["API_KEY","baseURL","getTrendingMovies","axios","params","api_key","responce","data","results","movies","getSearchResults","searchFilms","language","query","page","fetchFilmToId","id","getCastToId","getReviews","useState","reviews","setReviews","loading","setIsLoading","error","setError","movieId","useParams","useEffect","getReviewsMovie","massage","Loader","length","map","author","content","created_at","className","styles"],"sourceRoot":""}